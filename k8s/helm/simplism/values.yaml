replicaCount: 1

image:
  repository: k33g/simplism
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

privateRegistryToken: ""
adminRregistryToken: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

storageClass:
  name: ""

volumes:
 - name: wasm-registry-storage
   persistentVolumeClaim:
     claimName: task-pv-wasm-registry-claim
#   secret:
#     secretName: mysecret
#     optional: false

storageSize: 5Gi

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
 - name: wasm-registry-storage
   mountPath: "/wasm-registry-files"
   readOnly: false

nodeSelector: {}

tolerations: []

affinity: {}
